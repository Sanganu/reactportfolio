{"version":3,"sources":["pages/Landing.js","components/ProjectCard.js","pages/Work.js","pages/Connect.js","components/Header.js","components/Footer.js","pages/Resume.js","App.js","serviceWorker.js","index.js"],"names":["Landing","className","ProjectCard","details","Card","style","width","Img","variant","src","process","screenshot","Body","Title","app","Text","description","Link","href","repo","live","Work","projectData","map","key","Connect","Container","title","height","frameBorder","marginHeight","marginWwidth","Header","aria-current","to","Footer","Resume","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"w7CAkBeA,G,MAdC,WAEZ,OAAQ,yBAAKC,UAAU,kFACd,8BAEA,2DACA,qU,gBCgBEC,EAvBK,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClB,OAAQ,yBAAKF,UAAU,gBACnB,kBAACG,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,UAClB,kBAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKC,kBAAyBP,EAAQQ,aAC9D,kBAACP,EAAA,EAAKQ,KAAN,KACI,kBAACR,EAAA,EAAKS,MAAN,KAAaV,EAAQW,KACrB,kBAACV,EAAA,EAAKW,KAAN,KACKZ,EAAQa,cAQjB,kBAACZ,EAAA,EAAKQ,KAAN,KACI,kBAACR,EAAA,EAAKa,KAAN,CAAWhB,UAAU,QAAQiB,KAAMf,EAAQgB,MAA3C,UACA,kBAACf,EAAA,EAAKa,KAAN,CAAWhB,UAAU,QAAQiB,KAAMf,EAAQiB,MAA3C,YCEDC,EAjBF,WAQT,OAAO,8BACH,wBAAIpB,UAAU,2BAAd,YACA,6BAAUA,UAAU,qCACnBqB,EAAYC,KAAI,SAACT,EAAIU,GAAL,OACjB,kBAAC,EAAD,CAAarB,QAASW,EAAKU,IAAKA,U,QCFzBC,EAZC,WACZ,OAAQ,0BAAMxB,UAAU,gBACpB,wBAAIA,UAAU,2BAAd,cACA,kBAACyB,EAAA,EAAD,KAEI,4BAAQzB,UAAU,UAAU0B,MAAM,UAC9BlB,IAAI,oHACJH,MAAM,MAAMsB,OAAO,MAAMC,YAAY,IAAIC,aAAa,IAAIC,aAAa,KAF3E,oB,MCiBGC,MArBf,WACI,OAAQ,4BAAQ/B,UAAU,eACtB,2CACA,6BACI,wBAAIA,UAAU,8BACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,kBAAkBgC,eAAa,OAAOC,GAAG,KAAzD,UAEJ,wBAAIjC,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWiC,GAAG,SAA9B,cAEJ,wBAAIjC,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWiC,GAAG,YAA9B,YAEJ,wBAAIjC,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWiC,GAAG,WAA9B,eCXLC,G,MANA,WACX,OAAO,4BAAQlC,UAAU,oBACrB,wDCUOmC,EAXA,WACX,OAAO,0BAAMnC,UAAU,gBACvB,wBAAIA,UAAU,2BAAd,UACA,kBAACyB,EAAA,EAAD,KACA,4BAAQC,MAAM,SAAS1B,UAAU,UAAUQ,IAAKC,8CAChDJ,MAAM,MAAMsB,OAAO,MAAMC,YAAY,IAAIC,aAAa,IAAIC,aAAa,KADvE,iBCqBWM,MAjBf,WACE,OACE,yBAAKpC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAM,CAAC,IAAI,aAAevC,GACvC,kBAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,SAASlB,GAC3B,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,YAAYd,GAC9B,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,WAAWH,IAE/B,kBAAC,EAAD,SCVYI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6832dfae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./landing.css\";\r\n\r\n\r\nconst Landing = () => {\r\n\r\n    return (<div className=\"jumbotron landing d-flex text-center justify-content-center align-items-center\">\r\n             <main>\r\n               \r\n             <h1> Full Stack Web Development</h1>\r\n             <p>I am currently working as a Senior Tutor and Centralized grader for 2U. Mainly focused on Full-Stack Web development.\r\n                This is a portfolio created using react, react-bootstrap npm packages. The Google form is used in the Contact section and the google document is used in\r\n                the Resume section. \r\n                </p>\r\n                </main>\r\n    </div>)\r\n}\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport {Card} from\"react-bootstrap\";\r\n\r\nconst ProjectCard = ({details}) => {\r\n    return (<div className=\"card m-3 p-3\">\r\n        <Card style={{ width: '18rem' }}>\r\n            <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + details.screenshot} />\r\n            <Card.Body>\r\n                <Card.Title>{details.app}</Card.Title>\r\n                <Card.Text>\r\n                    {details.description}\r\n                </Card.Text>\r\n            </Card.Body>\r\n            {/* <ListGroup className=\"list-group-flush\">\r\n                <ListGroupItem>{details.description}</ListGroupItem>\r\n                <ListGroupItem></ListGroupItem>\r\n                <ListGroupItem></ListGroupItem>\r\n            </ListGroup> */}\r\n            <Card.Body>\r\n                <Card.Link className=\"links\" href={details.repo}>Github</Card.Link>\r\n                <Card.Link className=\"links\" href={details.live}>Live</Card.Link>\r\n            </Card.Body>\r\n        </Card>\r\n    </div>)\r\n}\r\n\r\nexport default ProjectCard;\r\n","// import {useState,useEffect} from \"react\";\r\nimport React from \"react\";\r\nimport projectData from \"./projects.json\"\r\nimport ProjectCard from \"../components/ProjectCard\"\r\n// import \"./portfoliostyle.css\";\r\nconst Work = () => {\r\n    // const [projects,setProjects] = useState([])\r\n \r\n    // useEffect(()=>{\r\n    //     setProjects(projectData)      \r\n    //     console.log(projectData)\r\n    // },[])\r\n   \r\n    return(<main>\r\n        <h3 className=\"text-center page-header\">Fun Apps</h3>\r\n        <article  className=\"container m-auto d-flex flex-wrap\">\r\n        {projectData.map((app,key) => (\r\n        <ProjectCard details={app} key={key} />))}\r\n        </article>\r\n        </main>)\r\n}\r\n\r\nexport default Work;","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst Connect = () => {\r\n    return (<main className=\"main-content\">\r\n        <h3 className=\"text-center page-header\">Contact Me</h3>\r\n        <Container>\r\n\r\n            <iframe className=\"m-3 p=3\" title=\"connect\"\r\n                src=\"https://docs.google.com/forms/d/e/1FAIpQLSefg0VBnFjSRVvg0rtbGAMt1ntJA4KysDeYSEQLeZ0Zu43iIA/viewform?embedded=true\"\r\n                width=\"640\" height=\"947\" frameBorder=\"5\" marginHeight=\"2\" marginWwidth=\"4\">Loadingâ€¦</iframe>\r\n        </Container>\r\n    </main>)\r\n}\r\n\r\nexport default Connect;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./header.css\";\r\n\r\nfunction Header() {\r\n    return (<header className=\"text-center\">\r\n        <h1>Sangeetha.K</h1>\r\n        <nav>\r\n            <ul className=\"nav justify-content-center\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Intro</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/work\">Portfolio</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/connect\">Connect</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/resume\" >Resume</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </header>)\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport \"./footer.css\";\r\nconst Footer = function() {\r\n    return(<footer className=\"footer bg-danger\">\r\n        <p>&copy; Sangeetha.K, 2021</p>\r\n        </footer>)\r\n} \r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport {Container} from \"react-bootstrap\";\r\n\r\nconst Resume = () => {\r\n    return(<main className=\"main-content\">\r\n    <h3 className=\"text-center page-header\">Resume</h3>\r\n    <Container>\r\n    <iframe title=\"resume\" className=\"m-3 p-3\" src={process.env.PUBLIC_URL+\"/resource/ResumeTemplate.pdf\"} \r\n    width=\"740\" height=\"947\" frameBorder=\"5\" marginHeight=\"2\" marginWwidth=\"4\">\r\n    Loading...</iframe>\r\n    </Container>\r\n    </main>)\r\n}\r\n\r\nexport default Resume;\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport Landing from \"./pages/Landing\";\nimport Work from \"./pages/Work\";\nimport Connect from \"./pages/Connect\";\nimport Header from './components/Header';\nimport Footer from \"./components/Footer\";\nimport Resume from \"./pages/Resume\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <Route exact path={[\"/\",\"/aboutme\"] }>{Landing}</Route>\n          <Route exact path=\"/work\">{Work}</Route>\n          <Route exact path=\"/connect\">{Connect}</Route>\n          <Route exact path=\"/resume\">{Resume}</Route>\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}